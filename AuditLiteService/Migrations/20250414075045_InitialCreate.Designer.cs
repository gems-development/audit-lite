// <auto-generated />
using System;
using AuditLiteService.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AuditLiteService.Migrations
{
    [DbContext(typeof(AuditDbContext))]
    [Migration("20250414075045_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AuditLiteService.Models.PostgresAuditEventEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EventDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("EventEnvironmentId")
                        .HasColumnType("integer");

                    b.Property<string>("EventType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EventEnvironmentId");

                    b.ToTable("AuditEvents");
                });

            modelBuilder.Entity("AuditLiteService.Models.PostgresCustomFieldEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AuditEventId")
                        .HasColumnType("integer");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AuditEventId");

                    b.ToTable("CustomFields");
                });

            modelBuilder.Entity("AuditLiteService.Models.PostgresEventEnvironmentEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("IpAddress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MachineName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MethodName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("EventEnvironments");
                });

            modelBuilder.Entity("AuditLiteService.Models.PostgresAuditEventEntity", b =>
                {
                    b.HasOne("AuditLiteService.Models.PostgresEventEnvironmentEntity", "PostgresEventEnvironmentEntity")
                        .WithMany()
                        .HasForeignKey("EventEnvironmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PostgresEventEnvironmentEntity");
                });

            modelBuilder.Entity("AuditLiteService.Models.PostgresCustomFieldEntity", b =>
                {
                    b.HasOne("AuditLiteService.Models.PostgresAuditEventEntity", "PostgresAuditEventEntity")
                        .WithMany("CustomFields")
                        .HasForeignKey("AuditEventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PostgresAuditEventEntity");
                });

            modelBuilder.Entity("AuditLiteService.Models.PostgresAuditEventEntity", b =>
                {
                    b.Navigation("CustomFields");
                });
#pragma warning restore 612, 618
        }
    }
}
